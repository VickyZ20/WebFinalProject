{"version":3,"sources":["api/index.js","view/login/index.js","api/user.js","view/registry/index.js","view/index.js","api/hourse.js","view/detail/index.js","view/user/index.js","reportWebVitals.js","index.js"],"names":["_post","url","data","Promise","resolve","reject","fetch","method","body","JSON","stringify","headers","Headers","then","r","json","res","message","alert","catch","er","_get","query","Object","keys","map","key","join","e","console","log","Login","props","state","name","password","target","value","this","setState","preventDefault","code","localStorage","setItem","uid","history","push","pathname","className","onInput","setValue","type","placeholder","onClick","login","to","React","Component","Home","page","list","datesort","pricesort","roomNum","loading","_getList","result","eles","document","getElementsByName","Array","from","filter","item","checked","ite","error","onChange","label","_id","src","imgList","alt","titletextonly","rprice","loadMore","Detail","swiperref","createRef","id","info","fold","commentText","Swiper","window","swiper","width","allowSlideNext","nextButton","prevButton","initSwiper","match","params","getDetail","content","row","hid","index","comments","obj","assign","logined","getItem","ref","housing","mapaddress","dangerouslySetInnerHTML","__html","postingbody","colls","rows","publishDiss","style","textAlign","margin","username","userid","createTime","editComm","removeComm","User","users","getList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","exact","path","component","Registry","getElementById"],"mappings":"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","file":"static/js/main.7d59e17e.chunk.js","sourcesContent":["\nexport const _post = (url, data) => new Promise((resolve, reject) => {\n    fetch(url, {\n        method: 'post',\n        body: JSON.stringify(data),\n        headers: new Headers({\n            'Content-Type': 'application/json'\n        })\n    }).then(r => {\n        return r.json()\n    }).then(res => {\n        resolve(res)\n        res.message && alert(res.message)\n    }).catch(er => reject(er))\n})\n\nexport const _get = (url, data) => new Promise((resolve, reject) => {\n    let query\n    if (data) {\n        query = (Object.keys(data).map(key => {\n            return key + '=' + data[key]\n        })).join('&')\n    }\n\n    if (query) {\n        url = url + '?' + query\n    }\n    fetch(url, {\n        query: data,\n        headers: new Headers({\n            'Content-Type': 'application/json'\n        })\n    }).then(r => {\n        return r.json()\n    }).then(res => {\n        res.message && alert(res.message)\n        resolve(res)\n    }).catch(e => {\n        console.log(e)\n    })\n})\n\n","import React from 'react'\nimport './index.css'\nimport { Link } from 'react-router-dom'\nimport { login } from '../../api/user'\n\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            password: ''\n        }\n    }\n\n    setValue(e) {\n        const { name, value } = e.target\n        this.setState({\n            [name]: value\n        })\n    }\n    async login(e) {\n        e.preventDefault()\n        const { name, password } = this.state\n        if (!name || !password) {\n            return alert('please input username and password')\n        }\n        const res = await login({ name, password })\n        if (res.code !== 200) {\n            return\n        }\n        localStorage.setItem('logined', res.uid)\n        this.props.history.push({ pathname: '/' })\n    }\n    render() {\n        const { name, password } = this.state\n        return <div className=\"login\">\n            <div className=\"wrapper\">\n                <h3 >Login</h3>\n                <form >\n                    <label>\n                        <input name=\"name\" onInput={e => this.setValue(e)} value={name} type=\"text\" placeholder=\"please input username\" />\n                    </label>\n                    <label>\n                        <input name=\"password\" onInput={e => this.setValue(e)} value={password} type=\"password\" placeholder=\"please input password\" />\n                    </label>\n                    <label className=\"oper\">\n                        <button onClick={e => this.login(e)}>Login</button>\n                        <p>No account？<Link to=\"registry\" >Registry</Link></p>\n                    </label>\n                </form>\n            </div>\n        </div>\n    }\n}","import { _get, _post } from './index'\nexport const login = data => _post('/user/login', data)\n\nexport const register = data => _post('/user/register', data)\n\nexport const query = data => _get('/user', data)","import React from 'react'\nimport './index.css'\nimport { Link } from 'react-router-dom'\nimport { register } from '../../api/user'\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            password: ''\n        }\n    }\n\n    setValue(e) {\n        const { name, value } = e.target\n        this.setState({\n            [name]: value\n        })\n    }\n    async login(e) {\n        e.preventDefault()\n        const { name, password } = this.state\n        if (!name || !password) {\n            return alert('please input username and password')\n        }\n        const res = await register({ name, password })\n        if (res.code !== 200) {\n            return\n        }\n        this.props.history.push('/login')\n    }\n    render() {\n        const { name, password } = this.state\n        return <div className=\"login\">\n            <div className=\"wrapper\">\n                <h3 >Registry</h3>\n                <form >\n                    <label>\n                        <input name=\"name\" onInput={e => this.setValue(e)} value={name} type=\"text\" placeholder=\"please input username\" />\n                    </label>\n                    <label>\n                        <input name=\"password\" onInput={e => this.setValue(e)} value={password} type=\"password\" placeholder=\"please input password\" />\n                    </label>\n                    <label className=\"oper\">\n                        <button onClick={e => this.login(e)}>Registry</button>\n                        <p>Have account？<Link to=\"login\" >Login</Link></p>\n                    </label>\n                </form>\n            </div>\n        </div>\n    }\n}","import React from 'react'\nimport { getList } from '../api/hourse'\nimport './index.css'\nimport { Link } from 'react-router-dom'\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            page: 1,\n            list: [],\n            datesort: '0',\n            pricesort: '0',\n            roomNum: [],\n            loading: false\n        }\n    }\n    componentDidMount() {\n        this._getList()\n    }\n    async _getList() {\n        const { page, datesort, pricesort, roomNum } = this.state\n        const res = await getList({ page, datesort, pricesort, roomNum })\n        const { list } = this.state;\n        this.setState({\n            list: [...list, ...res.result]\n        })\n    }\n    setValue(e) {\n        if (e.target.name === 'roomNum') {\n            const eles = document.getElementsByName('roomNum')\n            this.setState({\n                roomNum: Array.from(eles).filter(item => item.checked).map(ite => ite.value).join(',')\n            })\n            return\n        }\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    async query(e) {\n        e.preventDefault()\n        await this.setState({\n            list: []\n        })\n        this._getList()\n    }\n    async loadMore() {\n        try {\n            const { page } = this.state\n            await this.setState({\n                loading: true,\n                page: page + 1\n            })\n            this._getList()\n        } catch (e) {\n            console.error(e)\n        } finally {\n            this.setState({\n                loading: false\n            })\n        }\n\n    }\n    render() {\n        const { list, datesort, pricesort, loading } = this.state\n        return <div className=\"home\">\n            <form className=\"oper\">\n                <label>\n                    Sort by datetime\n                    <select name=\"datesort\" value={datesort} onChange={e => this.setValue(e)}>\n                        <option value=\"0\" label=\"default\" />\n                        <option value=\"1\" label=\"time most recent to oldest\" />\n                        <option value=\"-1\" label=\"time oldest to most recent\" />\n                    </select>\n                </label>\n                <label>\n                    Sort by price\n                    <select name=\"pricesort\" value={pricesort} onChange={e => this.setValue(e)}>\n                        <option value=\"0\" label=\"default\" />\n                        <option value=\"1\" label=\"price low to high\" />\n                        <option value=\"-1\" label=\"price high to low\" />\n                    </select>\n                </label>\n                <label>Room Number：\n                    <label>\n                        1&nbsp;\n                        <input name=\"roomNum\" value=\"1\" type=\"checkbox\" onChange={e => this.setValue(e)} />\n                    </label>\n                    <label>\n                        2&nbsp;\n                        <input name=\"roomNum\" value=\"2\" type=\"checkbox\" onChange={e => this.setValue(e)} />\n                    </label>\n                    <label>\n                        3&nbsp;\n                        <input name=\"roomNum\" value=\"3\" type=\"checkbox\" onChange={e => this.setValue(e)} />\n                    </label>\n                </label>\n\n                <label>\n                    <button onClick={e => this.query(e)}>search</button>\n                </label>\n            </form>\n            <ul className=\"wrap\">\n                {\n                    list.map(item => <li key={item._id} className=\"item\">\n                        <Link to={`/detail/${item._id}`}>\n                            <img src={item.imgList[0]} alt={item.titletextonly} />\n                            <p className=\"h-title\">{item.titletextonly}</p>\n                            <p className=\"roomNum\">roomNum: {item.roomNum || ''}</p>\n                            <p className=\"h-info\">\n                                <span className=\"h-price\">${item.rprice}</span>\n                                <span className=\"h-date\">{item['result-date']}</span>\n                            </p>\n                        </Link>\n                    </li>)\n                }\n            </ul>\n            <button className=\"load\" onClick={e => this.loadMore(e)}>{loading ? 'please wait for while, loading' : 'Load More'}</button>\n        </div>\n    }\n}","import { _get, _post } from './index'\n\nexport const getList = data => _get('/hourse', data)\n\nexport const query = data => _get('/hourse/query', data)\n\nexport const diss = data => _post('/hourse/diss', data)\n\nexport const removeComm = data => _get('/hourse/removeComm', data)\n\nexport const edit = data => _post('/hourse/edit', data)\n","import React from 'react'\nimport { query, diss, removeComm, edit } from '../../api/hourse'\nimport { Link } from 'react-router-dom'\nimport './index.css'\n\nexport default class Detail extends React.Component {\n    constructor(props) {\n        super(props)\n        this.swiperref = React.createRef();\n        this.state = {\n            id: null,\n            info: {},\n            fold: false,\n            commentText: ''\n        }\n    }\n    initSwiper() {\n        const Swiper = window.Swiper\n        this.swiper = new Swiper('.swiper-container', {\n            width: 800,\n            allowSlideNext: true,\n            nextButton: '.swiper-button-next',\n            prevButton: '.swiper-button-prev',\n        })\n\n    }\n    async getDetail() {\n        const res = await query({ id: this.state.id })\n        if (res.code === 200) {\n            await this.setState({\n                info: res.result\n            })\n            this.initSwiper()\n        }\n    }\n    colls() {\n        const { fold } = this.state\n        this.setState({\n            fold: !fold\n        })\n    }\n    async componentDidMount() {\n        const { id } = this.props.match.params\n        await this.setState({\n            id\n        })\n        this.getDetail()\n    }\n    setValue(e) {\n        const { name, value } = e.target\n        this.setState({\n            [name]: value\n        })\n    }\n    async publishDiss(e) {\n        e.preventDefault()\n        const { commentText, id } = this.state\n        const res = await diss({ content: commentText, id })\n        if (res.code === 200) {\n            this.setState({\n                commentText: ''\n            })\n            this.getDetail()\n        }\n        if (res.code === 401) {\n            this.props.history.push({ pathname: '/login' })\n        }\n    }\n    async removeComm(row) {\n        const res = await removeComm({ _id: row._id, hid: this.state.id })\n        if (res.code === 200) {\n            this.getDetail()\n        }\n        if (res.code === 401) {\n            this.props.history.push({ pathname: '/login' })\n        }\n    }\n    async editComm(row) {\n        const res = await edit({ _id: row._id, hid: this.state.id, content: row.content })\n        if (res.code === 200) {\n            this.getDetail()\n        }\n        if (res.code === 401) {\n            this.props.history.push({ pathname: '/login' })\n        }\n    }\n    setItem(e, row, index) {\n        const { info } = this.state\n        let list = info.comments\n        row.content = e.target.value\n        list[index] = row\n        let obj = Object.assign(info, { comments: list })\n        this.setState({\n            info: obj\n        })\n    }\n    render() {\n        const { info, fold, commentText } = this.state\n        const logined = localStorage.getItem('logined')\n        return <div className=\"detail\">\n            <div className=\"swiper-container\" ref={this.swiperref}>\n                <div className=\"swiper-wrapper\">\n                    {\n                        info.imgList && info.imgList.map(ite => <div key={ite} className=\"swiper-slide\">\n                            <img src={ite} alt=\"\" />\n                        </div>)\n                    }\n                </div>\n                <div className=\"swiper-button-prev\"></div>\n                <div className=\"swiper-button-next\"></div>\n            </div>\n            <div className=\"hourse-info\">\n                <p className=\"price\">price: ${info.rprice}/month</p>\n                <p className=\"hourse-type\">{info.housing}</p>\n                <p className=\"title\">{info.titletextonly}</p>\n                <p className=\"add\">address: {info.mapaddress}</p>\n                <div className={`content ${fold ? 'fold' : ''}`}>\n                    <p className=\"\" dangerouslySetInnerHTML={{ __html: info.postingbody }}></p>\n                    <span onClick={e => this.colls(e)}>\n                        {\n                            fold ? 'fold' : 'unfold'\n                        }\n                    </span>\n                </div>\n            </div>\n            <div className=\"comments\">\n                <div className=\"publish\">\n                    {logined ?\n                        <form>\n                            <label>\n                                <textarea name=\"commentText\" rows=\"4\" onChange={e => this.setValue(e)} placeholder=\"publish your opinion\" value={commentText} />\n                            </label>\n                            <label>\n                                <button onClick={e => this.publishDiss(e)}>submit</button>\n                            </label>\n                        </form>\n                        : <p style={{ textAlign: 'center' }}>want discuss please <Link to=\"/login\">Login</Link></p>\n                    }\n                </div>\n                <h4 style={{ margin: '0 12px' }}>Comments</h4>\n                <ul className=\"comm-wrapper\">\n                    {\n                        info.comments && info.comments.map((item, index) => <li key={item._id} className=\"comm-item\">\n                            <div>\n                                <em className=\"username\">{item.username}: </em>\n                                {\n                                    logined === item.userid ? <textarea onChange={e => this.setItem(e, item, index)} value={item.content} /> : item.content\n                                }\n                                <p className=\"create-time\">{item.createTime}</p>\n                            </div>\n\n                            {\n                                logined === item.userid && <div className=\"btns\">\n                                    <button onClick={e => this.editComm(item)}>Edit</button>\n                                    <button onClick={e => this.removeComm(item)}>Delete</button>\n                                </div>\n                            }\n                        </li>)\n                    }\n                </ul>\n            </div>\n        </div>\n    }\n}","import React from 'react'\nimport { query } from '../../api/user'\nimport './index.css'\n\nexport default class User extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            users: []\n        }\n    }\n    async getList() {\n        const res = await query()\n        this.setState({\n            users: res.result\n        })\n    }\n    componentDidMount() {\n        this.getList()\n    }\n    render() {\n        const { users } = this.state\n        return <div className=\"users\">\n            <ul>\n                {\n                    users.map(item => <li key={item._id}>\n                        {item.name}\n                    </li>)\n                }\n            </ul>\n        </div>\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Login from './view/login'\nimport Registry from './view/registry'\nimport Home from './view/index'\nimport Detail from './view/detail'\nimport User from './view/user'\n\nimport reportWebVitals from './reportWebVitals';\n\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <div>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/registry\" component={Registry} />\n        <Route path=\"/detail/:id\" component={Detail} />\n        <Route path=\"/user\" component={User} />\n      </div>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}